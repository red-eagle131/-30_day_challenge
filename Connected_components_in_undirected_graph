vector<int>v;
    int parent(int x)
    {
        if(v[x]==-1) 
            return x; 
        return v[x]=parent(v[x]);
    }
    void _union(int a,int b)
    {
        int p1=parent(a),p2=parent(b);
        if(p1==p2) 
            return; 
        v[p1]=p2;
    }
    
    int findCircleNum(vector<vector<int>>& M) { 
        int n=M.size();
        v=vector<int> (n,-1);
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i!=j && M[i][j])
                {
                    _union(i,j);
                }
            }
        }
        int c=0; 
        for(int i=0;i<n;i++)
        {
            if(v[i]==-1) 
                c++;
        }
        return c; 
    }
