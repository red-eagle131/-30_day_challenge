int solver(vector<int> &A,int i,int j,int s,vector<vector<int> >&dp)
    {
        if(j==i+1)
        {
            dp[i][j]=max(A[i],A[j]);
            return dp[i][j];
        }
        if(dp[i][j]!=-1)
            return dp[i][j];
        dp[i][j]=max(s-solver(A,i+1,j,s-A[i],dp),s-solver(A,i,j-1,s-A[j],dp));
        return dp[i][j];
    }
    bool stoneGame(vector<int>& piles) {
        int n=piles.size();
        int s=0;
        vector<vector<int> >dp(n+1,vector<int>(n+1,-1));
        for(int i=0;i<n;i++)
            s+=piles[i];
        int k=solver(piles,0,n-1,s,dp);
        if(k>s/2)
            return true;
        else
            return false;
    }
